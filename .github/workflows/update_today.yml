# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: update

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */4 * * *'
permissions:
  contents: write
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
    - name: update
      env: 
         GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        python run.py today | tee /tmp/update.log
    - name: Generate doc/index.md
      run: |
        # 创建文档目录（如果不存在）
        mkdir -p doc
        
        # 生成文档列表头部
        echo "# 文档列表" > doc/index.md
        echo "" >> doc/index.md
        
        # 查找doc目录下的所有.md文件并生成链接
        find doc -type f -name "*.md" | while read -r file; do
          # 移除doc/前缀
          relative_path="${file#doc/}"
          
          # 获取文件标题（第一行以#开头的内容）
          title=$(head -n 1 "$file" | grep '^#' | sed 's/^#* //')
          
          # 如果没有标题，使用文件名
          if [ -z "$title" ]; then
            title=$(basename "$file" .md)
          fi
          
          # URL编码路径
          encoded_path=$(echo "$relative_path" | python -c 'import sys, urllib.parse as ul; print(ul.quote(sys.stdin.read().strip()))')
          
          # 添加到index.md
          echo "- [$title]($encoded_path)" >> doc/index.md
        done
        
        # 显示生成的内容
        cat doc/index.md
    - name: Commit and push if changed
      run: |
        git config --global user.email "test"
        git config --global user.name "test"
        git add .
        MESSAGE=$(cat /tmp/update.log)
        COMMIT_MESSAGE="Update doc/index.md with latest file list\n\n$MESSAGE"
        git diff-index --quiet HEAD || git commit -m "$(echo -e "$COMMIT_MESSAGE")"
        git push
